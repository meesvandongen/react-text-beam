{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;AAEA,SAAS,8BAAQ,CAAC,KAAK,EAAE;IACrB,sBAAS,CAAC,IAAM;QACZ,MAAM,iBAAiB,GAAG,CAAC,KAAK,GAAK;YACjC,IAAI,KAAK,GAAG;gBAAE,CAAC,EAAE,KAAK,CAAC,OAAO;gBAAE,CAAC,EAAE,KAAK,CAAC,OAAO;aAAE,AAAC;YACnD,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAE;gBAChE,oDAAoD;gBACpD,IAAI,EAAE,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC,IAAI,GAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC,KAAK,GAAG,CAAC,AAAC,AAAC;gBACtF,IAAI,EAAE,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC,GAAG,GAAG,QAAQ,CAAC,eAAe,CAAC,SAAS,GAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC,MAAM,GAAG,CAAC,AAAC,AAAC;gBAC3H,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE,AAAC;gBACrB,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE,AAAC;gBACrB,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,AAAC;gBACxC,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,eAAe;gBAExC,IAAI,SAAS,GAAG,GAAG,AAAC;gBACpB,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;gBAEzC,IAAI,KAAK,GAAG,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,WAAW,GAAG,CAAC,AAAC;gBACjE,IAAI,YAAY,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,AAAC;gBAEtE,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,GAAG,SAAS,GAAG,YAAY,CAAC;aACpE;SACJ;QACD,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAC1D,OAAO,IAAM;YACT,qBAAqB,CACrB,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;SAChE,CAAC;KACL,EAAE,EAAE,CAAC,CAAC;IACP,SAAS,KAAK,CAAC,IAAI,EAAE;QACjB,IAAI,KAAK,GAAG,EAAE,AAAC;QACf,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAErB,OAAO,KAAK,CAAC;KAChB;IACD,uCAAuC;IACvC,SAAS,KAAK,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE;QAC9B,OAAO,OAAO,IAAI,GAAG,GAAG,GAAG,GAAG,OAAO,IAAI,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC;KAChE;IACD,OACI,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,iBAClC,4BAAC,MAAI;YAAa,SAAS,EAAC,iBAAiB;;gBAAE,IAAI;gBAAC,GAAC;;WAA1C,KAAK,CAA4C;IAAA,CAC/D,CACH;CACL;IACD,wCAAwB,GAAT,8BAAQ;;AD/CvB","sources":["src/index.js","src/TextBeam/index.js"],"sourcesContent":["export * from './TextBeam'","import './index.css';\r\nimport { useEffect } from 'react';\r\nfunction TextBeam(props) {\r\n    useEffect(() => {\r\n        const mouseMoveCallback = (event) => {\r\n            let mouse = { x: event.clientX, y: event.clientY };\r\n            for (let span of document.querySelectorAll(\"span.react-text-beam\")) {\r\n                // since Math.hypot is slow.. we do it this ugly way\r\n                let sx = span.getBoundingClientRect().left + (span.getBoundingClientRect().width / 2);\r\n                let sy = span.getBoundingClientRect().top + document.documentElement.scrollTop + (span.getBoundingClientRect().height / 2);\r\n                let a = mouse.x - sx;\r\n                let b = mouse.y - sy;\r\n                let distance = Math.sqrt(a * a + b * b);\r\n                distance = distance * 2; // lol, i know.\r\n\r\n                let topweight = 800;\r\n                distance = clamp(distance, 1, topweight);\r\n\r\n                let scale = topweight / document.documentElement.clientWidth * 2;\r\n                let calcedweight = topweight - Math.trunc(Math.abs(distance * scale));\r\n\r\n                span.style[\"font-variation-settings\"] = \"'wght' \" + calcedweight;\r\n            }\r\n        }\r\n        document.addEventListener('mousemove', mouseMoveCallback);\r\n        return () => {\r\n            /* cheers Merlin04 */\r\n            document.removeEventListener('mousemove', mouseMoveCallback);\r\n        };\r\n    }, []);\r\n    function expan(text) {\r\n        let words = [];\r\n        for (let word of text.split(' ')) {\r\n            words.push(word);\r\n        }\r\n        return words;\r\n    }\r\n    // https://stackoverflow.com/a/11410079\r\n    function clamp(current, min, max) {\r\n        return current <= min ? min : current >= max ? max : current;\r\n    }\r\n    return (\r\n        expan(props.children).map((word, index) =>\r\n            <span key={index} className=\"react-text-beam\">{word} </span>\r\n        )\r\n    );\r\n}\r\nexport default TextBeam;"],"names":[],"version":3,"file":"index.js.map"}